pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-credentials')
        FLASK_SECRET_KEY = 'secret_key_2368'
        DB_HOST = 'db'
        DB_USER = 'postgres'
        DB_DATABASE = 'warehouse'
        DB_PASSWORD = 'password'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/gtemiliv/warehouse.git'
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    docker.build('gtemilv/app:latest', '-f app.dockerfile .')
                    docker.build('gtemilv/db:latest', '-f db.dockerfile .')
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    def db = docker.image('gtemilv/db:latest')
                    def app = docker.image('gtemilv/app:latest')

                    db.withRun('-e POSTGRES_PASSWORD=$DB_PASSWORD -e POSTGRES_DB=$DB_DATABASE') { c ->
                        app.withRun("--link ${c.id}:db -e DB_HOST=$DB_HOST -e DB_USER=$DB_USER -e DB_DATABASE=$DB_DATABASE -e DB_PASSWORD=$DB_PASSWORD") {
                            sh 'docker-compose -f docker-compose.yml run app pytest'
                        }
                    }
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                        docker.image('gtemilv/app:latest').push()
                        docker.image('gtemilv/db:latest').push()
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    sh 'docker-compose -f docker-compose.yml down'
                    sh 'docker-compose -f docker-compose.yml up -d'
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}